[tool.poetry]
name = "simcc"
version = "3.0.0"
description = ""
authors = ["meirelesgc <geu_costa@outlook.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11.0,<3.14"
fastapi = {extras = ["standard"], version = "^0.115.6"}
respx = "^0.22.0"
httpx = "0.27.2"
pydantic-settings = "^2.7.1"
psycopg = {extras = ["binary"], version = "^3.2.4"}
pandas = "^2.2.3"
unidecode = "^1.3.8"
zeep = "^4.3.1"
alembic = "^1.14.0"
testcontainers = {extras = ["postgres"], version = "^4.9.0"}
openpyxl = "^3.1.5"
pdfplumber = "^0.11.5"
nltk = "^3.9.1"
beautifulsoup4 = "^4.12.3"
requests = "^2.32.3"
selenium = "^4.28.0"
firebase-admin = "^6.6.0"
psycopg-pool = "^3.2.4"
xlrd = "^2.0.1"
pytest-asyncio = "^1.0.0"
spacy = "^3.8.7"
langchain-openai = "^0.3.21"
langchain-postgres = "^0.0.15"
webdriver-manager = "^4.0.2"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-cov = "^6.0.0"
taskipy = "^1.14.1"
ruff = "^0.8.4"

[tool.ruff]
line-length = 81
extend-exclude = ['migrations']
ignore = ['PLR0913', 'PLR0917', 'PLR2004', 'E501', 'PLR0914', 'PLR0915', 'PLR0912']


[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.taskipy.tasks]
lint = 'ruff check; ruff check --fix --unsafe-fixes; ruff format'
run = 'fastapi dev simcc/app.py'
test = 'pytest -s -x --cov=simcc -vv; coverage html'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
